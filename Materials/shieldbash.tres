[gd_resource type="ShaderMaterial" load_steps=18 format=2]

[ext_resource path="res://Texture/shield_bash_texture.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 11.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 0.65 ]

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.0767123, 0.232877, 0.49863, 0.665753, 0.791781, 0.912329, 0.989041 )
colors = PoolColorArray( 0, 0, 0, 0, 0.213563, 0.167038, 0.480469, 1, 0, 0.648438, 1, 1, 0, 0, 0, 1, 0.0600586, 0, 0.480469, 1, 0.716736, 0.601563, 1, 1, 0.160217, 0.820313, 0.449009, 1, 0.94574, 0.0078125, 1, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = SubResource( 8 )
texture_type = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=11]
uniform_name = "Time"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShader" id=16]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform float Time;
uniform sampler2D tex_frg_2 : hint_albedo;
uniform sampler2D tex_frg_3 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// ScalarUniform:5
	float n_out5p0 = Time;

// ScalarOp:10
	float n_in10p1 = 2.00000;
	float n_out10p0 = n_out5p0 * n_in10p1;

// VectorCompose:9
	float n_in9p1 = 0.00000;
	float n_in9p2 = 0.00000;
	vec3 n_out9p0 = vec3(n_out10p0, n_in9p1, n_in9p2);

// VectorOp:12
	vec3 n_out12p0 = n_out11p0 + n_out9p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out12p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarOp:20
	float n_in20p1 = 0.65000;
	float n_out20p0 = n_out5p0 + n_in20p1;

// ScalarOp:19
	float n_in19p1 = 11.00000;
	float n_out19p0 = n_out20p0 * n_in19p1;

// ScalarFunc:4
	float n_out4p0 = sin(n_out19p0);

// ScalarOp:6
	float n_in6p1 = 1.00000;
	float n_out6p0 = n_out4p0 + n_in6p1;

// ScalarOp:7
	float n_in7p1 = 0.50000;
	float n_out7p0 = n_out6p0 * n_in7p1;

// ScalarOp:8
	float n_out8p0 = n_out2p1 * n_out7p0;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, vec3(n_out8p0).xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -524, 121 )
modes/cull = 2
flags/ambient_light_disabled = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 380, 140 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -400, 120 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( 160, 160 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( -600, 440 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( -1520, 300 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( -380, 420 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( -180, 420 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -20, 240 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( -860, 220 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1060, 220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -840, -40 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -640, 60 )
nodes/fragment/19/node = SubResource( 4 )
nodes/fragment/19/position = Vector2( -820, 420 )
nodes/fragment/20/node = SubResource( 6 )
nodes/fragment/20/position = Vector2( -1055.83, 414.4 )
nodes/fragment/connections = PoolIntArray( 4, 0, 6, 0, 6, 0, 7, 0, 2, 1, 8, 0, 7, 0, 8, 1, 8, 0, 3, 0, 10, 0, 9, 0, 12, 0, 2, 0, 3, 0, 0, 0, 19, 0, 4, 0, 5, 0, 20, 0, 20, 0, 19, 0, 5, 0, 10, 0, 11, 0, 12, 0, 9, 0, 12, 1, 3, 1, 0, 1 )

[resource]
resource_local_to_scene = true
render_priority = 127
shader = SubResource( 16 )
shader_param/Time = 0.3285
